/*
 * This file is generated by jOOQ.
*/
package com.generator;


import com.generator.tables.AuthCredentials;
import com.generator.tables.Friend;
import com.generator.tables.FriendMessage;
import com.generator.tables.TMyData;
import com.generator.tables.TMyLogin;
import com.generator.tables.TWeXinOkapi;
import com.generator.tables.TWeXinUserinfo;
import com.generator.tables.records.AuthCredentialsRecord;
import com.generator.tables.records.FriendMessageRecord;
import com.generator.tables.records.FriendRecord;
import com.generator.tables.records.TMyDataRecord;
import com.generator.tables.records.TMyLoginRecord;
import com.generator.tables.records.TWeXinOkapiRecord;
import com.generator.tables.records.TWeXinUserinfoRecord;

import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>tat0004_mod_login</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthCredentialsRecord> AUTH_CREDENTIALS_PKEY = UniqueKeys0.AUTH_CREDENTIALS_PKEY;
    public static final UniqueKey<FriendRecord> FRIEND_PKEY = UniqueKeys0.FRIEND_PKEY;
    public static final UniqueKey<FriendMessageRecord> FRIEND_MESSAGE_PKEY = UniqueKeys0.FRIEND_MESSAGE_PKEY;
    public static final UniqueKey<TMyDataRecord> T_MY_DATA_PKEY = UniqueKeys0.T_MY_DATA_PKEY;
    public static final UniqueKey<TMyLoginRecord> MY_LOGIN_PKEY = UniqueKeys0.MY_LOGIN_PKEY;
    public static final UniqueKey<TWeXinOkapiRecord> T_WE_XIN_OKAPI_PKEY = UniqueKeys0.T_WE_XIN_OKAPI_PKEY;
    public static final UniqueKey<TWeXinUserinfoRecord> T_WE_XIN_USERINFO_PKEY = UniqueKeys0.T_WE_XIN_USERINFO_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<AuthCredentialsRecord> AUTH_CREDENTIALS_PKEY = Internal.createUniqueKey(AuthCredentials.AUTH_CREDENTIALS, "auth_credentials_pkey", AuthCredentials.AUTH_CREDENTIALS._ID);
        public static final UniqueKey<FriendRecord> FRIEND_PKEY = Internal.createUniqueKey(Friend.FRIEND, "friend_pkey", Friend.FRIEND.ID);
        public static final UniqueKey<FriendMessageRecord> FRIEND_MESSAGE_PKEY = Internal.createUniqueKey(FriendMessage.FRIEND_MESSAGE, "friend_message_pkey", FriendMessage.FRIEND_MESSAGE.ID);
        public static final UniqueKey<TMyDataRecord> T_MY_DATA_PKEY = Internal.createUniqueKey(TMyData.T_MY_DATA, "t_my_data_pkey", TMyData.T_MY_DATA.ID);
        public static final UniqueKey<TMyLoginRecord> MY_LOGIN_PKEY = Internal.createUniqueKey(TMyLogin.T_MY_LOGIN, "my_login_pkey", TMyLogin.T_MY_LOGIN.ID);
        public static final UniqueKey<TWeXinOkapiRecord> T_WE_XIN_OKAPI_PKEY = Internal.createUniqueKey(TWeXinOkapi.T_WE_XIN_OKAPI, "t_we_xin_okapi_pkey", TWeXinOkapi.T_WE_XIN_OKAPI.ID);
        public static final UniqueKey<TWeXinUserinfoRecord> T_WE_XIN_USERINFO_PKEY = Internal.createUniqueKey(TWeXinUserinfo.T_WE_XIN_USERINFO, "t_we_xin_userinfo_pkey", TWeXinUserinfo.T_WE_XIN_USERINFO.ID);
    }
}
