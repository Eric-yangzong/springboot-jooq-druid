/*
 * This file is generated by jOOQ.
*/
package com.generator.tables;


import com.bdhanbang.base.jooq.PostgresJsonBinding;
import com.fasterxml.jackson.databind.JsonNode;
import com.generator.Indexes;
import com.generator.Keys;
import com.generator.Userlib;
import com.generator.tables.records.TLogOperationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLogOperation extends TableImpl<TLogOperationRecord> {

    private static final long serialVersionUID = 1794872205;

    /**
     * The reference instance of <code>userlib.t_log_operation</code>
     */
    public static final TLogOperation T_LOG_OPERATION = new TLogOperation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLogOperationRecord> getRecordType() {
        return TLogOperationRecord.class;
    }

    /**
     * The column <code>userlib.t_log_operation.id</code>.
     */
    public final TableField<TLogOperationRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>userlib.t_log_operation.app_code</code>.
     */
    public final TableField<TLogOperationRecord, String> APP_CODE = createField("app_code", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>userlib.t_log_operation.app_name</code>.
     */
    public final TableField<TLogOperationRecord, String> APP_NAME = createField("app_name", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>userlib.t_log_operation.module_id</code>.
     */
    public final TableField<TLogOperationRecord, String> MODULE_ID = createField("module_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>userlib.t_log_operation.user_code</code>.
     */
    public final TableField<TLogOperationRecord, String> USER_CODE = createField("user_code", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>userlib.t_log_operation.user_name</code>.
     */
    public final TableField<TLogOperationRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>userlib.t_log_operation.opt_time</code>.
     */
    public final TableField<TLogOperationRecord, LocalDateTime> OPT_TIME = createField("opt_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>userlib.t_log_operation.quote_addr</code>.
     */
    public final TableField<TLogOperationRecord, String> QUOTE_ADDR = createField("quote_addr", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>userlib.t_log_operation.opt_mark</code>.
     */
    public final TableField<TLogOperationRecord, String> OPT_MARK = createField("opt_mark", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>userlib.t_log_operation.jsonb</code>.
     */
    public final TableField<TLogOperationRecord, JsonNode> JSONB = createField("jsonb", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "", new PostgresJsonBinding());

    /**
     * Create a <code>userlib.t_log_operation</code> table reference
     */
    public TLogOperation() {
        this(DSL.name("t_log_operation"), null);
    }

    /**
     * Create an aliased <code>userlib.t_log_operation</code> table reference
     */
    public TLogOperation(String alias) {
        this(DSL.name(alias), T_LOG_OPERATION);
    }

    /**
     * Create an aliased <code>userlib.t_log_operation</code> table reference
     */
    public TLogOperation(Name alias) {
        this(alias, T_LOG_OPERATION);
    }

    private TLogOperation(Name alias, Table<TLogOperationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLogOperation(Name alias, Table<TLogOperationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userlib.USERLIB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_APP_CODE, Indexes.IDX_APP_NAME, Indexes.IDX_MODULE_ID, Indexes.IDX_OPT_MARK, Indexes.IDX_OPT_TIME, Indexes.IDX_QUOTE_ADDR, Indexes.IDX_USER_CODE, Indexes.IDX_USER_NAME, Indexes.LOG_OPERATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLogOperationRecord> getPrimaryKey() {
        return Keys.LOG_OPERATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLogOperationRecord>> getKeys() {
        return Arrays.<UniqueKey<TLogOperationRecord>>asList(Keys.LOG_OPERATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLogOperation as(String alias) {
        return new TLogOperation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLogOperation as(Name alias) {
        return new TLogOperation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLogOperation rename(String name) {
        return new TLogOperation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLogOperation rename(Name name) {
        return new TLogOperation(name, null);
    }
}
