/*
 * This file is generated by jOOQ.
*/
package com.generator.tables;


import com.generator.Indexes;
import com.generator.Keys;
import com.generator.Userlib;
import com.generator.tables.records.TLoginTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoginType extends TableImpl<TLoginTypeRecord> {

    private static final long serialVersionUID = -100320682;

    /**
     * The reference instance of <code>userlib.t_login_type</code>
     */
    public static final TLoginType T_LOGIN_TYPE = new TLoginType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoginTypeRecord> getRecordType() {
        return TLoginTypeRecord.class;
    }

    /**
     * The column <code>userlib.t_login_type.id</code>.
     */
    public final TableField<TLoginTypeRecord, Short> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>userlib.t_login_type.name</code>.
     */
    public final TableField<TLoginTypeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * Create a <code>userlib.t_login_type</code> table reference
     */
    public TLoginType() {
        this(DSL.name("t_login_type"), null);
    }

    /**
     * Create an aliased <code>userlib.t_login_type</code> table reference
     */
    public TLoginType(String alias) {
        this(DSL.name(alias), T_LOGIN_TYPE);
    }

    /**
     * Create an aliased <code>userlib.t_login_type</code> table reference
     */
    public TLoginType(Name alias) {
        this(alias, T_LOGIN_TYPE);
    }

    private TLoginType(Name alias, Table<TLoginTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoginType(Name alias, Table<TLoginTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userlib.USERLIB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOGIN_TYPE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoginTypeRecord> getPrimaryKey() {
        return Keys.T_LOGIN_TYPE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoginTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoginTypeRecord>>asList(Keys.T_LOGIN_TYPE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoginType as(String alias) {
        return new TLoginType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoginType as(Name alias) {
        return new TLoginType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoginType rename(String name) {
        return new TLoginType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoginType rename(Name name) {
        return new TLoginType(name, null);
    }
}
