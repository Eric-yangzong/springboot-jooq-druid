/*
 * This file is generated by jOOQ.
*/
package com.generator.tables;


import com.bdhanbang.base.jooq.PostgresJsonBinding;
import com.fasterxml.jackson.databind.JsonNode;
import com.generator.Indexes;
import com.generator.Keys;
import com.generator.Userlib;
import com.generator.tables.records.TMyLoginRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TMyLogin extends TableImpl<TMyLoginRecord> {

    private static final long serialVersionUID = -1037893594;

    /**
     * The reference instance of <code>userlib.t_my_login</code>
     */
    public static final TMyLogin T_MY_LOGIN = new TMyLogin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TMyLoginRecord> getRecordType() {
        return TMyLoginRecord.class;
    }

    /**
     * The column <code>userlib.t_my_login.id</code>.
     */
    public final TableField<TMyLoginRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>userlib.t_my_login.user_code</code>.
     */
    public final TableField<TMyLoginRecord, String> USER_CODE = createField("user_code", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>userlib.t_my_login.user_name</code>.
     */
    public final TableField<TMyLoginRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>userlib.t_my_login.login_type</code>.
     */
    public final TableField<TMyLoginRecord, String> LOGIN_TYPE = createField("login_type", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>userlib.t_my_login.login_time</code>.
     */
    public final TableField<TMyLoginRecord, LocalDateTime> LOGIN_TIME = createField("login_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>userlib.t_my_login.login_ip</code>.
     */
    public final TableField<TMyLoginRecord, String> LOGIN_IP = createField("login_ip", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>userlib.t_my_login.jsonb</code>.
     */
    public final TableField<TMyLoginRecord, JsonNode> JSONB = createField("jsonb", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "", new PostgresJsonBinding());

    /**
     * Create a <code>userlib.t_my_login</code> table reference
     */
    public TMyLogin() {
        this(DSL.name("t_my_login"), null);
    }

    /**
     * Create an aliased <code>userlib.t_my_login</code> table reference
     */
    public TMyLogin(String alias) {
        this(DSL.name(alias), T_MY_LOGIN);
    }

    /**
     * Create an aliased <code>userlib.t_my_login</code> table reference
     */
    public TMyLogin(Name alias) {
        this(alias, T_MY_LOGIN);
    }

    private TMyLogin(Name alias, Table<TMyLoginRecord> aliased) {
        this(alias, aliased, null);
    }

    private TMyLogin(Name alias, Table<TMyLoginRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Userlib.USERLIB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MY_LOGIN_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TMyLoginRecord> getPrimaryKey() {
        return Keys.MY_LOGIN_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TMyLoginRecord>> getKeys() {
        return Arrays.<UniqueKey<TMyLoginRecord>>asList(Keys.MY_LOGIN_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TMyLogin as(String alias) {
        return new TMyLogin(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TMyLogin as(Name alias) {
        return new TMyLogin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TMyLogin rename(String name) {
        return new TMyLogin(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TMyLogin rename(Name name) {
        return new TMyLogin(name, null);
    }
}
